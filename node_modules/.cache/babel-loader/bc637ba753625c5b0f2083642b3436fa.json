{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahek\\\\OneDrive\\\\Desktop\\\\PROJECTS\\\\netflix-clone-clever-programmer\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\n// 'rfce' \nimport React, { useState, useEffect } from 'react';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original/';\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fecthData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fecthData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name) || \" \").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(err => console.log(err));\n    }\n  };\n\n  //console.table(movies)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","YouTube","movieTrailer","axios","jsxDEV","_jsxDEV","base_url","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","fecthData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","backdrop_path","alt","id","videoId","_c","$RefreshReg$"],"sources":["C:/Users/mahek/OneDrive/Desktop/PROJECTS/netflix-clone-clever-programmer/src/Row.js"],"sourcesContent":["// 'rfce' \nimport React, { useState, useEffect } from 'react'\nimport YouTube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\n\nimport axios from './axios'\nimport './Row.css'\n\nconst base_url = 'https://image.tmdb.org/t/p/original/'\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([])\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\n\n    useEffect(() => {\n        async function fecthData(){\n            const request = await axios.get(fetchUrl)\n            setMovies(request.data.results)\n            return request\n        }\n        fecthData()\n    }, [fetchUrl])\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n\n            autoplay: 1\n        }\n    }\n\n    const handleClick = (movie) => {\n        if(trailerUrl){\n            setTrailerUrl('')\n        } else {\n            movieTrailer(movie?.title || movie?.name || movie?.original_name || \" \").then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search)\n                setTrailerUrl(urlParams.get('v'))\n            }).catch(err => console.log(err))\n        }\n    }\n\n    //console.table(movies)\n\n    return (\n        <div className='row'>\n            <h2>{ title }</h2>\n\n            <div className=\"row_posters\">\n                {movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                        alt={movie.name}/>\n                ))}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\n        </div>\n    )\n}\n\nexport default Row\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,YAAY,MAAM,eAAe;AAExC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,eAAegB,SAASA,CAAA,EAAE;MACtB,MAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACT,QAAQ,CAAC;MACzCI,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMY,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MAERC,QAAQ,EAAE;IACd;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAGb,UAAU,EAAC;MACVC,aAAa,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACHb,YAAY,CAAC,CAAAyB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEnB,KAAK,MAAImB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,MAAID,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,aAAa,KAAI,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QACjF,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAAC,IAAIC,GAAG,CAACH,GAAG,CAAC,CAACI,MAAM,CAAC;QAC1DpB,aAAa,CAACiB,SAAS,CAACd,GAAG,CAAC,GAAG,CAAC,CAAC;MACrC,CAAC,CAAC,CAACkB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;;EAED;;EAEA,oBACIhC,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBpC,OAAA;MAAAoC,QAAA,EAAMjC;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAElBxC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvB7B,MAAM,CAACkC,GAAG,CAACnB,KAAK,iBACbtB,OAAA;QAEI0C,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAACC,KAAK,CAAE;QAClCa,SAAS,EAAE,cAAc9B,UAAU,IAAI,iBAAiB,EAAG;QAC3DsC,GAAG,EAAE,GAAG1C,QAAQ,GAAGI,UAAU,GAAGiB,KAAK,CAACsB,WAAW,GAAGtB,KAAK,CAACuB,aAAa,EAAG;QAC1EC,GAAG,EAAExB,KAAK,CAACC;MAAK,GAJXD,KAAK,CAACyB,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAII,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACL/B,UAAU,iBAAIT,OAAA,CAACJ,OAAO;MAACoD,OAAO,EAAEvC,UAAW;MAACO,IAAI,EAAEA;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd;AAAClC,EAAA,CApDQJ,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAsDZ,eAAeA,GAAG;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}